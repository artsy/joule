---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ project_name }}-web
  namespace: default
  labels:
    app: {{ project_name }}
    component: web
    layer: application
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ project_name }}
      component: web
      layer: application
  template:
    metadata:
      labels:
        app: {{ project_name }}
        component: web
        layer: application
      name: {{ project_name }}-web
    spec:
      containers:
        - name: {{ project_name }}-web
          env:
            - name: PORT
              value: "8080"
            - name: NODE_ENV
              value: production
            - name: DATADOG_TRACE_AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_OPTIONS
              value: "--max_old_space_size=256"
          envFrom:
            - configMapRef:
                name: {{ project_name }}-environment
          image: {{ project_repo }}:production
          imagePullPolicy: Always
          ports:
            - name: {{ project_name }}-http
              containerPort: 8080
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              memory: 1Gi
          readinessProbe:
            tcpSocket:
              port: {{ project_name }}-http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: tier
                  operator: In
                  values:
                    - foreground

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ project_name }}-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ project_name }}-web
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ project_name }}
    component: web
    layer: application
  name: {{ project_name }}-web-internal
  namespace: default
spec:
  ports:
    - port: 8080
      protocol: TCP
      name: http
      targetPort: 8080
  selector:
    app: {{ project_name }}
    layer: application
    component: web
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ project_name }}
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "{{ externalIngressAllowSourceIP|join(',') }}"
spec:
  ingressClassName: nginx
  rules:
    - host: {{ project_name }}.artsy.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: {{ project_name }}-web-internal
              servicePort: http